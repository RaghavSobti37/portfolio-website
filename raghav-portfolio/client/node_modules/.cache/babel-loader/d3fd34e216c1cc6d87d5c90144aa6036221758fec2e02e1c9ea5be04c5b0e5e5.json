{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raghav Raj Sobti\\\\Desktop\\\\portfolio website code\\\\raghav-portfolio\\\\client\\\\src\\\\components\\\\GoldenSpiralLoader.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GOLDEN_RATIO = 1.618;\nconst SIZE = 200; // SVG size\n\nconst GoldenSpiralLoader = () => {\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: SIZE,\n    height: SIZE,\n    viewBox: `0 0 ${SIZE} ${SIZE}`,\n    style: {\n      display: \"block\",\n      margin: \"auto\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      fill: \"none\",\n      stroke: \"#DAA520\" // golden color\n      ,\n      strokeWidth: \"3\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      d: generateSpiralPath(SIZE / 2, SIZE / 2, 6),\n      children: [/*#__PURE__*/_jsxDEV(\"animate\", {\n        attributeName: \"stroke-dashoffset\",\n        from: \"1000\",\n        to: \"0\",\n        dur: \"3s\",\n        repeatCount: \"indefinite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"animate\", {\n        attributeName: \"stroke-dasharray\",\n        values: \"0,1000;1000,0;0,1000\",\n        dur: \"3s\",\n        repeatCount: \"indefinite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n// Generate golden spiral path inward with n rectangles/arcs\n_c = GoldenSpiralLoader;\nfunction generateSpiralPath(cx, cy, n) {\n  let path = \"\";\n  let x = cx;\n  let y = cy;\n  let size = 80;\n  let sign = 1;\n  for (let i = 0; i < n; i++) {\n    // Draw a quarter circle arc\n    const r = size;\n    // arc: A rx ry x-axis-rotation large-arc-flag sweep-flag x y\n    // Sweep flag alternates to go inward spiral\n    path += `M ${x} ${y} `;\n    path += `a ${r} ${r} 0 0 ${sign > 0 ? 1 : 0} ${sign * r} ${sign * r} `;\n\n    // Move origin for next arc inward\n    x += sign * r;\n    y += sign * r;\n\n    // Reduce size by golden ratio for next arc\n    size = size / GOLDEN_RATIO;\n    sign = -sign; // alternate arc sweep direction\n  }\n  return path;\n}\nexport default GoldenSpiralLoader;\nvar _c;\n$RefreshReg$(_c, \"GoldenSpiralLoader\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","GOLDEN_RATIO","SIZE","GoldenSpiralLoader","width","height","viewBox","style","display","margin","children","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","generateSpiralPath","attributeName","from","to","dur","repeatCount","fileName","_jsxFileName","lineNumber","columnNumber","values","_c","cx","cy","n","path","x","y","size","sign","i","r","$RefreshReg$"],"sources":["C:/Users/Raghav Raj Sobti/Desktop/portfolio website code/raghav-portfolio/client/src/components/GoldenSpiralLoader.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nconst GOLDEN_RATIO = 1.618;\r\nconst SIZE = 200; // SVG size\r\n\r\nconst GoldenSpiralLoader = () => {\r\n  return (\r\n    <svg\r\n      width={SIZE}\r\n      height={SIZE}\r\n      viewBox={`0 0 ${SIZE} ${SIZE}`}\r\n      style={{ display: \"block\", margin: \"auto\" }}\r\n    >\r\n      <path\r\n        fill=\"none\"\r\n        stroke=\"#DAA520\" // golden color\r\n        strokeWidth=\"3\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        d={generateSpiralPath(SIZE / 2, SIZE / 2, 6)}\r\n      >\r\n        <animate\r\n          attributeName=\"stroke-dashoffset\"\r\n          from=\"1000\"\r\n          to=\"0\"\r\n          dur=\"3s\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n        <animate\r\n          attributeName=\"stroke-dasharray\"\r\n          values=\"0,1000;1000,0;0,1000\"\r\n          dur=\"3s\"\r\n          repeatCount=\"indefinite\"\r\n        />\r\n      </path>\r\n    </svg>\r\n  );\r\n};\r\n\r\n// Generate golden spiral path inward with n rectangles/arcs\r\nfunction generateSpiralPath(cx, cy, n) {\r\n  let path = \"\";\r\n  let x = cx;\r\n  let y = cy;\r\n  let size = 80;\r\n  let sign = 1;\r\n\r\n  for (let i = 0; i < n; i++) {\r\n    // Draw a quarter circle arc\r\n    const r = size;\r\n    // arc: A rx ry x-axis-rotation large-arc-flag sweep-flag x y\r\n    // Sweep flag alternates to go inward spiral\r\n    path += `M ${x} ${y} `;\r\n    path += `a ${r} ${r} 0 0 ${sign > 0 ? 1 : 0} ${sign * r} ${sign * r} `;\r\n\r\n    // Move origin for next arc inward\r\n    x += sign * r;\r\n    y += sign * r;\r\n\r\n    // Reduce size by golden ratio for next arc\r\n    size = size / GOLDEN_RATIO;\r\n    sign = -sign; // alternate arc sweep direction\r\n  }\r\n\r\n  return path;\r\n}\r\n\r\nexport default GoldenSpiralLoader;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAY,GAAG,KAAK;AAC1B,MAAMC,IAAI,GAAG,GAAG,CAAC,CAAC;;AAElB,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAC/B,oBACEH,OAAA;IACEI,KAAK,EAAEF,IAAK;IACZG,MAAM,EAAEH,IAAK;IACbI,OAAO,EAAE,OAAOJ,IAAI,IAAIA,IAAI,EAAG;IAC/BK,KAAK,EAAE;MAAEC,OAAO,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAO,CAAE;IAAAC,QAAA,eAE5CV,OAAA;MACEW,IAAI,EAAC,MAAM;MACXC,MAAM,EAAC,SAAS,CAAC;MAAA;MACjBC,WAAW,EAAC,GAAG;MACfC,aAAa,EAAC,OAAO;MACrBC,cAAc,EAAC,OAAO;MACtBC,CAAC,EAAEC,kBAAkB,CAACf,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAG,CAAC,EAAE,CAAC,CAAE;MAAAQ,QAAA,gBAE7CV,OAAA;QACEkB,aAAa,EAAC,mBAAmB;QACjCC,IAAI,EAAC,MAAM;QACXC,EAAE,EAAC,GAAG;QACNC,GAAG,EAAC,IAAI;QACRC,WAAW,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACF1B,OAAA;QACEkB,aAAa,EAAC,kBAAkB;QAChCS,MAAM,EAAC,sBAAsB;QAC7BN,GAAG,EAAC,IAAI;QACRC,WAAW,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;;AAED;AAAAE,EAAA,GAlCMzB,kBAAkB;AAmCxB,SAASc,kBAAkBA,CAACY,EAAE,EAAEC,EAAE,EAAEC,CAAC,EAAE;EACrC,IAAIC,IAAI,GAAG,EAAE;EACb,IAAIC,CAAC,GAAGJ,EAAE;EACV,IAAIK,CAAC,GAAGJ,EAAE;EACV,IAAIK,IAAI,GAAG,EAAE;EACb,IAAIC,IAAI,GAAG,CAAC;EAEZ,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,CAAC,EAAEM,CAAC,EAAE,EAAE;IAC1B;IACA,MAAMC,CAAC,GAAGH,IAAI;IACd;IACA;IACAH,IAAI,IAAI,KAAKC,CAAC,IAAIC,CAAC,GAAG;IACtBF,IAAI,IAAI,KAAKM,CAAC,IAAIA,CAAC,QAAQF,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,IAAIA,IAAI,GAAGE,CAAC,IAAIF,IAAI,GAAGE,CAAC,GAAG;;IAEtE;IACAL,CAAC,IAAIG,IAAI,GAAGE,CAAC;IACbJ,CAAC,IAAIE,IAAI,GAAGE,CAAC;;IAEb;IACAH,IAAI,GAAGA,IAAI,GAAGlC,YAAY;IAC1BmC,IAAI,GAAG,CAACA,IAAI,CAAC,CAAC;EAChB;EAEA,OAAOJ,IAAI;AACb;AAEA,eAAe7B,kBAAkB;AAAC,IAAAyB,EAAA;AAAAW,YAAA,CAAAX,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}